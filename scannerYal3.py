class ScannerClassAFD(object):
    def __init__(self):
        self.regex = ['(', '(', 32, '|', 9, '|', 10, ')', '+', ')', '#ws', '|', '(', '(', '(', 48, '|', 49, '|', 50, '|', 51, '|', 52, '|', 53, '|', 54, '|', 55, '|', 56, '|', 57, ')', '+', ')', '(', 46, '(', '(', 48, '|', 49, '|', 50, '|', 51, '|', 52, '|', 53, '|', 54, '|', 55, '|', 56, '|', 57, ')', '+', ')', ')', '?', '(', 69, '(', 43, '|', 45, ')', '?', '(', '(', 48, '|', 49, '|', 50, '|', 51, '|', 52, '|', 53, '|', 54, '|', 55, '|', 56, '|', 57, ')', '+', ')', ')', '?', ')', '#number', '|', 43, '#+', '|', 42, '#*', '|', 40, '#(', '|', 41, '#)']
        self.states = ['S0', 'S1', 'S2', 'S3', 'S4', 'S5', 'S6', 'S7', 'S8', 'S9', 'S10', 'S11']
        self.transitions = [['S0', 9, 'S1'], ['S0', 10, 'S1'], ['S0', 32, 'S1'], ['S0', 40, 'S2'], ['S0', 41, 'S3'], ['S0', 42, 'S4'], ['S0', 43, 'S5'], ['S0', 48, 'S6'], ['S0', 49, 'S6'], ['S0', 50, 'S6'], ['S0', 51, 'S6'], ['S0', 52, 'S6'], ['S0', 53, 'S6'], ['S0', 54, 'S6'], ['S0', 55, 'S6'], ['S0', 56, 'S6'], ['S0', 57, 'S6'], ['S1', 9, 'S1'], ['S1', 10, 'S1'], ['S1', 32, 'S1'], ['S6', 46, 'S7'], ['S6', 48, 'S6'], ['S6', 49, 'S6'], ['S6', 50, 'S6'], ['S6', 51, 'S6'], ['S6', 52, 'S6'], ['S6', 53, 'S6'], ['S6', 54, 'S6'], ['S6', 55, 'S6'], ['S6', 56, 'S6'], ['S6', 57, 'S6'], ['S6', 69, 'S8'], ['S7', 48, 'S9'], ['S7', 49, 'S9'], ['S7', 50, 'S9'], ['S7', 51, 'S9'], ['S7', 52, 'S9'], ['S7', 53, 'S9'], ['S7', 54, 'S9'], ['S7', 55, 'S9'], ['S7', 56, 'S9'], ['S7', 57, 'S9'], ['S8', 43, 'S10'], ['S8', 45, 'S10'], ['S8', 48, 'S11'], ['S8', 49, 'S11'], ['S8', 50, 'S11'], ['S8', 51, 'S11'], ['S8', 52, 'S11'], ['S8', 53, 'S11'], ['S8', 54, 'S11'], ['S8', 55, 'S11'], ['S8', 56, 'S11'], ['S8', 57, 'S11'], ['S9', 48, 'S9'], ['S9', 49, 'S9'], ['S9', 50, 'S9'], ['S9', 51, 'S9'], ['S9', 52, 'S9'], ['S9', 53, 'S9'], ['S9', 54, 'S9'], ['S9', 55, 'S9'], ['S9', 56, 'S9'], ['S9', 57, 'S9'], ['S9', 69, 'S8'], ['S10', 48, 'S11'], ['S10', 49, 'S11'], ['S10', 50, 'S11'], ['S10', 51, 'S11'], ['S10', 52, 'S11'], ['S10', 53, 'S11'], ['S10', 54, 'S11'], ['S10', 55, 'S11'], ['S10', 56, 'S11'], ['S10', 57, 'S11'], ['S11', 48, 'S11'], ['S11', 49, 'S11'], ['S11', 50, 'S11'], ['S11', 51, 'S11'], ['S11', 52, 'S11'], ['S11', 53, 'S11'], ['S11', 54, 'S11'], ['S11', 55, 'S11'], ['S11', 56, 'S11'], ['S11', 57, 'S11']]
        self.initial_state = 'S0'
        self.final_states = {'S1': '#ws', 'S2': '#(', 'S3': '#)', 'S4': '#*', 'S5': '#+', 'S6': '#number', 'S9': '#number', 'S11': '#number'}
        self.alphabet = [9, 10, 32, 40, 41, 42, 43, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, '#)', 69, '#*', '#+', '#number', '#ws', '#(']


def tokens(token):
	if(token == '#ws'):
		return WHITESPACE
	if(token == '#number'):
		return NUMBER
	if(token == '#+'):
		return PLUS
	if(token == '#*'):
		return TIMES
	if(token == '#('):
		return LPAREN
	if(token == '#)'):
		return RPAREN

	return ERROR

